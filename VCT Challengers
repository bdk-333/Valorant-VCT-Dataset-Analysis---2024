{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.14","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":9728386,"sourceType":"datasetVersion","datasetId":5953090}],"dockerImageVersionId":30786,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"source":"<a href=\"https://www.kaggle.com/code/blackdragonk333/valorant-vct-challengers-2024-analysis-eda?scriptVersionId=210721469\" target=\"_blank\"><img align=\"left\" alt=\"Kaggle\" title=\"Open in Kaggle\" src=\"https://kaggle.com/static/images/open-in-kaggle.svg\"></a>","metadata":{},"cell_type":"markdown"},{"cell_type":"markdown","source":"## Importing all important libraries","metadata":{}},{"cell_type":"code","source":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":true,"execution":{"iopub.status.busy":"2024-12-02T04:19:02.985614Z","iopub.execute_input":"2024-12-02T04:19:02.986142Z","iopub.status.idle":"2024-12-02T04:19:02.994312Z","shell.execute_reply.started":"2024-12-02T04:19:02.986105Z","shell.execute_reply":"2024-12-02T04:19:02.992764Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"file_path = '/kaggle/input/valorant-champions-tour-2024/vct-challengers.json'","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-02T04:19:02.996654Z","iopub.execute_input":"2024-12-02T04:19:02.99717Z","iopub.status.idle":"2024-12-02T04:19:03.011329Z","shell.execute_reply.started":"2024-12-02T04:19:02.997121Z","shell.execute_reply":"2024-12-02T04:19:03.00999Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"### Loading json file","metadata":{}},{"cell_type":"code","source":"df = pd.read_json(file_path)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-02T04:19:03.012736Z","iopub.execute_input":"2024-12-02T04:19:03.013057Z","iopub.status.idle":"2024-12-02T04:19:03.073583Z","shell.execute_reply.started":"2024-12-02T04:19:03.013027Z","shell.execute_reply":"2024-12-02T04:19:03.072237Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"df.head()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-02T04:19:03.076391Z","iopub.execute_input":"2024-12-02T04:19:03.07675Z","iopub.status.idle":"2024-12-02T04:19:03.092974Z","shell.execute_reply.started":"2024-12-02T04:19:03.076715Z","shell.execute_reply":"2024-12-02T04:19:03.091788Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"df.columns","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-02T04:19:03.094643Z","iopub.execute_input":"2024-12-02T04:19:03.095059Z","iopub.status.idle":"2024-12-02T04:19:03.111215Z","shell.execute_reply.started":"2024-12-02T04:19:03.095025Z","shell.execute_reply":"2024-12-02T04:19:03.110066Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"The playerStatistics col is a dict containing player stats like avg combat score, etc. And agent col is a list of agents used by the players.","metadata":{}},{"cell_type":"markdown","source":"We would need to split all these player stats to make it easier to explore this dataset.","metadata":{}},{"cell_type":"markdown","source":"## Data Pre-processing","metadata":{}},{"cell_type":"code","source":"from pandas import json_normalize\nimport json","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-02T04:19:03.112519Z","iopub.execute_input":"2024-12-02T04:19:03.112912Z","iopub.status.idle":"2024-12-02T04:19:03.124383Z","shell.execute_reply.started":"2024-12-02T04:19:03.11288Z","shell.execute_reply":"2024-12-02T04:19:03.123278Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# Load the JSON data from a file \nwith open(file_path) as file: \n    data = json.load(file) \n    \n# Normalize each entry in the JSON data and combine them into a DataFrame \ndf = pd.json_normalize(data)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-02T04:19:03.126321Z","iopub.execute_input":"2024-12-02T04:19:03.126763Z","iopub.status.idle":"2024-12-02T04:19:03.2044Z","shell.execute_reply.started":"2024-12-02T04:19:03.126697Z","shell.execute_reply":"2024-12-02T04:19:03.203372Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"df","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-02T04:19:03.205929Z","iopub.execute_input":"2024-12-02T04:19:03.206343Z","iopub.status.idle":"2024-12-02T04:19:03.231856Z","shell.execute_reply.started":"2024-12-02T04:19:03.206294Z","shell.execute_reply":"2024-12-02T04:19:03.230423Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"Now, we have a separate col for each player stats.","metadata":{}},{"cell_type":"code","source":"df.columns","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-02T04:19:03.236818Z","iopub.execute_input":"2024-12-02T04:19:03.237799Z","iopub.status.idle":"2024-12-02T04:19:03.25313Z","shell.execute_reply.started":"2024-12-02T04:19:03.237753Z","shell.execute_reply":"2024-12-02T04:19:03.252012Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"Let's change the col names","metadata":{}},{"cell_type":"code","source":"col_names = ['playerName', 'team', 'rating', 'region', 'agent', 'playerCategory',\n       'average_combat_score', 'kill_death_ratio',\n       'kill_assists_survived_traded',\n       'average_damage_per_round',\n       'kills_per_round',\n       'assists_per_round',\n       'first_kills_per_round',\n       'first_deaths_per_round',\n       'headshot_percentage',\n       'clutch_success_percentage']","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-02T04:19:03.255098Z","iopub.execute_input":"2024-12-02T04:19:03.255547Z","iopub.status.idle":"2024-12-02T04:19:03.268988Z","shell.execute_reply.started":"2024-12-02T04:19:03.255502Z","shell.execute_reply":"2024-12-02T04:19:03.26725Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"df.columns = col_names","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-02T04:19:03.270474Z","iopub.execute_input":"2024-12-02T04:19:03.270901Z","iopub.status.idle":"2024-12-02T04:19:03.283124Z","shell.execute_reply.started":"2024-12-02T04:19:03.270847Z","shell.execute_reply":"2024-12-02T04:19:03.281647Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"df.columns","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-02T04:19:03.284869Z","iopub.execute_input":"2024-12-02T04:19:03.285328Z","iopub.status.idle":"2024-12-02T04:19:03.298749Z","shell.execute_reply.started":"2024-12-02T04:19:03.285276Z","shell.execute_reply":"2024-12-02T04:19:03.297225Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"All cols are object type, but cols like kill_death_ratio, average_combat_score, etc. needs to be float. And cols like headshot_percentage, kill_assists_survived_traded, etc. needs to be percentages.","metadata":{}},{"cell_type":"code","source":"df.info()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-02T04:19:03.300321Z","iopub.execute_input":"2024-12-02T04:19:03.30066Z","iopub.status.idle":"2024-12-02T04:19:03.325096Z","shell.execute_reply.started":"2024-12-02T04:19:03.300628Z","shell.execute_reply":"2024-12-02T04:19:03.323937Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"percent_cols = ['kill_assists_survived_traded', 'headshot_percentage', 'clutch_success_percentage']","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-02T04:19:03.326575Z","iopub.execute_input":"2024-12-02T04:19:03.326914Z","iopub.status.idle":"2024-12-02T04:19:03.339436Z","shell.execute_reply.started":"2024-12-02T04:19:03.32688Z","shell.execute_reply":"2024-12-02T04:19:03.338104Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"A small function to remove the '%' sign from percent_cols","metadata":{}},{"cell_type":"code","source":"def remove_percentage_sign(x): \n    return float(x.strip('%')) / 100 if isinstance(x, str) else x","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-02T04:19:03.341241Z","iopub.execute_input":"2024-12-02T04:19:03.341568Z","iopub.status.idle":"2024-12-02T04:19:03.353933Z","shell.execute_reply.started":"2024-12-02T04:19:03.341528Z","shell.execute_reply":"2024-12-02T04:19:03.352582Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# df['headshot_percentage'] = df['headshot_percentage'].apply(remove_percentage_sign)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-02T04:19:03.355597Z","iopub.execute_input":"2024-12-02T04:19:03.356071Z","iopub.status.idle":"2024-12-02T04:19:03.368249Z","shell.execute_reply.started":"2024-12-02T04:19:03.356024Z","shell.execute_reply":"2024-12-02T04:19:03.366881Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"The above code generates ValueError as some of the rows contains empty string (\"\"), and it cant be converted to float directly. Let's first replace those empty strings with NaN.","metadata":{}},{"cell_type":"code","source":"df.replace(\"\", np.nan, inplace=True)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-02T04:19:03.369938Z","iopub.execute_input":"2024-12-02T04:19:03.370342Z","iopub.status.idle":"2024-12-02T04:19:03.394835Z","shell.execute_reply.started":"2024-12-02T04:19:03.370302Z","shell.execute_reply":"2024-12-02T04:19:03.393578Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"Let's try converting all percentage data from object to float","metadata":{}},{"cell_type":"code","source":"for col in percent_cols:\n    df[col] = df[col].apply(remove_percentage_sign)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-02T04:19:03.396738Z","iopub.execute_input":"2024-12-02T04:19:03.397235Z","iopub.status.idle":"2024-12-02T04:19:03.411921Z","shell.execute_reply.started":"2024-12-02T04:19:03.397186Z","shell.execute_reply":"2024-12-02T04:19:03.410569Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"df.head()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-02T04:19:03.41338Z","iopub.execute_input":"2024-12-02T04:19:03.413838Z","iopub.status.idle":"2024-12-02T04:19:03.44147Z","shell.execute_reply.started":"2024-12-02T04:19:03.413803Z","shell.execute_reply":"2024-12-02T04:19:03.44016Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"The '%' sign is removed from kill_assists_survived_traded, headshot_percentage and clutch_success_percentage cols. ","metadata":{}},{"cell_type":"code","source":"df.info()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-02T04:19:03.443369Z","iopub.execute_input":"2024-12-02T04:19:03.443856Z","iopub.status.idle":"2024-12-02T04:19:03.468033Z","shell.execute_reply.started":"2024-12-02T04:19:03.443805Z","shell.execute_reply":"2024-12-02T04:19:03.466354Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"Also, their type is changed to float","metadata":{}},{"cell_type":"markdown","source":"Now, lets change type of other cols from object to float as well.","metadata":{}},{"cell_type":"code","source":"num_cols = [\"rating\", \"average_combat_score\", \"kill_death_ratio\", \"average_damage_per_round\", \"kills_per_round\", \"assists_per_round\", \"first_kills_per_round\", \"first_deaths_per_round\"]","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-02T04:19:03.469609Z","iopub.execute_input":"2024-12-02T04:19:03.470006Z","iopub.status.idle":"2024-12-02T04:19:03.482836Z","shell.execute_reply.started":"2024-12-02T04:19:03.46997Z","shell.execute_reply":"2024-12-02T04:19:03.481328Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"for col in num_cols:\n    df[col] = df[col].astype('float')","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-02T04:19:03.484456Z","iopub.execute_input":"2024-12-02T04:19:03.485022Z","iopub.status.idle":"2024-12-02T04:19:03.506187Z","shell.execute_reply.started":"2024-12-02T04:19:03.484986Z","shell.execute_reply":"2024-12-02T04:19:03.504535Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"df.info()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-02T04:19:03.507784Z","iopub.execute_input":"2024-12-02T04:19:03.508133Z","iopub.status.idle":"2024-12-02T04:19:03.53181Z","shell.execute_reply.started":"2024-12-02T04:19:03.508103Z","shell.execute_reply":"2024-12-02T04:19:03.530404Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"Now, all cols have correct data types.","metadata":{}},{"cell_type":"markdown","source":"## Exploratory Data Analysis","metadata":{}},{"cell_type":"code","source":"df.describe()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-02T04:19:03.538185Z","iopub.execute_input":"2024-12-02T04:19:03.538652Z","iopub.status.idle":"2024-12-02T04:19:03.58724Z","shell.execute_reply.started":"2024-12-02T04:19:03.538612Z","shell.execute_reply":"2024-12-02T04:19:03.585856Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"df.describe(include='object')","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-02T04:19:03.589229Z","iopub.execute_input":"2024-12-02T04:19:03.589667Z","iopub.status.idle":"2024-12-02T04:19:03.681017Z","shell.execute_reply.started":"2024-12-02T04:19:03.589626Z","shell.execute_reply":"2024-12-02T04:19:03.679729Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"df['region'].value_counts()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-02T04:19:03.682465Z","iopub.execute_input":"2024-12-02T04:19:03.682849Z","iopub.status.idle":"2024-12-02T04:19:03.694023Z","shell.execute_reply.started":"2024-12-02T04:19:03.682812Z","shell.execute_reply":"2024-12-02T04:19:03.692499Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"EMEA is the most frequent region, followed by Pacific.","metadata":{}},{"cell_type":"code","source":"df['agent'].value_counts()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-02T04:19:03.695495Z","iopub.execute_input":"2024-12-02T04:19:03.695827Z","iopub.status.idle":"2024-12-02T04:19:03.772439Z","shell.execute_reply.started":"2024-12-02T04:19:03.695794Z","shell.execute_reply":"2024-12-02T04:19:03.771121Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"Seems like the duo of Raze and Jett is very popular, followed by Omen.","metadata":{}},{"cell_type":"markdown","source":"Let's see which agent is most popular, i.e., most used in the tournament.","metadata":{}},{"cell_type":"markdown","source":"### Agents","metadata":{}},{"cell_type":"markdown","source":"Creating a list of all agents in the game:","metadata":{}},{"cell_type":"code","source":"agents = [ \"Brimstone\", \"Phoenix\", \"Sage\", \"Sova\", \"Viper\", \"Cypher\", \"Reyna\", \"Killjoy\", \"Breach\", \"Omen\", \"Jett\", \"Raze\", \"Skye\", \"Yoru\", \"Astra\", \"KAYO\", \"Chamber\", \"Neon\", \"Fade\", \"Harbor\", \"Gekko\", \"Deadlock\", \"Iso\", \"Clove\", \"Vyse\"]","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-02T04:19:03.773991Z","iopub.execute_input":"2024-12-02T04:19:03.774332Z","iopub.status.idle":"2024-12-02T04:19:03.781134Z","shell.execute_reply.started":"2024-12-02T04:19:03.774277Z","shell.execute_reply":"2024-12-02T04:19:03.77994Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"In our dataset, agent names are in lowercase, however I created them in uppercase, lets change it.","metadata":{}},{"cell_type":"code","source":"agents = [agent.lower() for agent in agents]","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-02T04:19:03.783074Z","iopub.execute_input":"2024-12-02T04:19:03.784138Z","iopub.status.idle":"2024-12-02T04:19:03.798522Z","shell.execute_reply.started":"2024-12-02T04:19:03.784078Z","shell.execute_reply":"2024-12-02T04:19:03.797301Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"agents","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-02T04:19:03.799942Z","iopub.execute_input":"2024-12-02T04:19:03.800303Z","iopub.status.idle":"2024-12-02T04:19:03.81411Z","shell.execute_reply.started":"2024-12-02T04:19:03.800248Z","shell.execute_reply":"2024-12-02T04:19:03.812582Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"Creating an agents dict to contain the agent frequency","metadata":{}},{"cell_type":"code","source":"agents_dict = {}\n\nfor agent in agents:\n    agents_dict[agent] = 0","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-02T04:19:03.816137Z","iopub.execute_input":"2024-12-02T04:19:03.816797Z","iopub.status.idle":"2024-12-02T04:19:03.825575Z","shell.execute_reply.started":"2024-12-02T04:19:03.816673Z","shell.execute_reply":"2024-12-02T04:19:03.824236Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"for agent_list in df[\"agent\"]:\n    for agent in agent_list:\n        agents_dict[agent.lower()] += 1","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-02T04:19:03.827296Z","iopub.execute_input":"2024-12-02T04:19:03.827686Z","iopub.status.idle":"2024-12-02T04:19:03.842176Z","shell.execute_reply.started":"2024-12-02T04:19:03.827653Z","shell.execute_reply":"2024-12-02T04:19:03.840938Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"agents_dict","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-02T04:19:03.84409Z","iopub.execute_input":"2024-12-02T04:19:03.844927Z","iopub.status.idle":"2024-12-02T04:19:03.862092Z","shell.execute_reply.started":"2024-12-02T04:19:03.844873Z","shell.execute_reply":"2024-12-02T04:19:03.860683Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"sorted(agents_dict.items(), key=lambda item: item[1])","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-02T04:19:03.863572Z","iopub.execute_input":"2024-12-02T04:19:03.863931Z","iopub.status.idle":"2024-12-02T04:19:03.881896Z","shell.execute_reply.started":"2024-12-02T04:19:03.863899Z","shell.execute_reply":"2024-12-02T04:19:03.880449Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"So, Omen is THE most popular agent, followed closely by Viper, then by KJ, Raze and Sova.<br><br>Vyse, Iso, Clove, Pheonix are the least popular agents in this tournament.","metadata":{}},{"cell_type":"markdown","source":"### Handling missing values (NOTE: I should have done this in preprocessing step!)","metadata":{}},{"cell_type":"code","source":"df.isna().sum()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-02T04:19:03.883348Z","iopub.execute_input":"2024-12-02T04:19:03.883692Z","iopub.status.idle":"2024-12-02T04:19:03.899504Z","shell.execute_reply.started":"2024-12-02T04:19:03.883647Z","shell.execute_reply":"2024-12-02T04:19:03.898129Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"There are many missing values in the dataset.","metadata":{}},{"cell_type":"code","source":"df[df['rating'].isna()]","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-02T04:19:03.901093Z","iopub.execute_input":"2024-12-02T04:19:03.901547Z","iopub.status.idle":"2024-12-02T04:19:03.96464Z","shell.execute_reply.started":"2024-12-02T04:19:03.90151Z","shell.execute_reply":"2024-12-02T04:19:03.963466Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"df[df['kill_assists_survived_traded'].isna()]","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-02T04:19:03.966084Z","iopub.execute_input":"2024-12-02T04:19:03.966381Z","iopub.status.idle":"2024-12-02T04:19:04.025922Z","shell.execute_reply.started":"2024-12-02T04:19:03.966352Z","shell.execute_reply":"2024-12-02T04:19:04.024657Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"df[df['headshot_percentage'].isna()]","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-02T04:19:04.027669Z","iopub.execute_input":"2024-12-02T04:19:04.028155Z","iopub.status.idle":"2024-12-02T04:19:04.085952Z","shell.execute_reply.started":"2024-12-02T04:19:04.028107Z","shell.execute_reply":"2024-12-02T04:19:04.084779Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"All the missing values in the above cols are from China region.","metadata":{}},{"cell_type":"code","source":"df[df['clutch_success_percentage'].isna()]['region'].value_counts()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-02T04:19:04.087412Z","iopub.execute_input":"2024-12-02T04:19:04.087795Z","iopub.status.idle":"2024-12-02T04:19:04.099477Z","shell.execute_reply.started":"2024-12-02T04:19:04.087739Z","shell.execute_reply":"2024-12-02T04:19:04.098263Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"Unlike other cols with missing values, clutch_success_percentage has missing values from all regions.","metadata":{}},{"cell_type":"markdown","source":"Let's see how all these are distributed.","metadata":{}},{"cell_type":"code","source":"cols_to_plot = ['rating', 'kill_assists_survived_traded', 'headshot_percentage', 'clutch_success_percentage']","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-02T04:19:04.101136Z","iopub.execute_input":"2024-12-02T04:19:04.101593Z","iopub.status.idle":"2024-12-02T04:19:04.109219Z","shell.execute_reply.started":"2024-12-02T04:19:04.101545Z","shell.execute_reply":"2024-12-02T04:19:04.108044Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"plt.figure(figsize=(14, 6)) \nfor col in cols_to_plot: \n    sns.histplot(df[col], kde=True, label=col, bins=10) \n\n# Adding legend \nplt.legend(title='Columns') \nplt.xlabel('Value') \nplt.ylabel('Frequency') \nplt.title('Distribution of Selected Columns') \nplt.grid(axis='y', linestyle='--', alpha=0.7)\nplt.show()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-02T04:19:04.110727Z","iopub.execute_input":"2024-12-02T04:19:04.111091Z","iopub.status.idle":"2024-12-02T04:19:04.692207Z","shell.execute_reply.started":"2024-12-02T04:19:04.111053Z","shell.execute_reply":"2024-12-02T04:19:04.690794Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"Except for clutch_success_percentage (which is heavely skewed), all other distributions look close to normal.","metadata":{}},{"cell_type":"markdown","source":"Let's fill those NAs with the mean values, except for clutch_success_percentage.","metadata":{}},{"cell_type":"code","source":"df[[\"rating\", \"kill_assists_survived_traded\", \"headshot_percentage\"]] = df[[\"rating\", \"kill_assists_survived_traded\", \"headshot_percentage\"]].fillna(df[[\"rating\", \"kill_assists_survived_traded\", \"headshot_percentage\"]].mean())","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-02T04:19:04.693974Z","iopub.execute_input":"2024-12-02T04:19:04.694404Z","iopub.status.idle":"2024-12-02T04:19:04.710299Z","shell.execute_reply.started":"2024-12-02T04:19:04.694359Z","shell.execute_reply":"2024-12-02T04:19:04.70916Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"df.info()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-02T04:19:04.711886Z","iopub.execute_input":"2024-12-02T04:19:04.712223Z","iopub.status.idle":"2024-12-02T04:19:04.734815Z","shell.execute_reply.started":"2024-12-02T04:19:04.712192Z","shell.execute_reply":"2024-12-02T04:19:04.733198Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"Still, clutch success percent has many NAs. I have tried to fill it using KNNImputer, which predicts what those missing values should be, based on the values of its nearest neighbors.","metadata":{}},{"cell_type":"code","source":"from sklearn.impute import KNNImputer\n\nimputer = KNNImputer(n_neighbors=5)\ndf[['clutch_success_percentage']] = imputer.fit_transform(df[['clutch_success_percentage']])","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-02T04:19:04.736544Z","iopub.execute_input":"2024-12-02T04:19:04.737037Z","iopub.status.idle":"2024-12-02T04:19:04.861343Z","shell.execute_reply.started":"2024-12-02T04:19:04.737003Z","shell.execute_reply":"2024-12-02T04:19:04.859942Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"df.info()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-02T04:19:04.86305Z","iopub.execute_input":"2024-12-02T04:19:04.863635Z","iopub.status.idle":"2024-12-02T04:19:04.899579Z","shell.execute_reply.started":"2024-12-02T04:19:04.863572Z","shell.execute_reply":"2024-12-02T04:19:04.897115Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"Now, there are no missing values","metadata":{}},{"cell_type":"markdown","source":"Let's see how our KNN Imputer filled those missing values:","metadata":{}},{"cell_type":"code","source":"plt.hist(df['clutch_success_percentage'], bins=50)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-02T04:19:04.904247Z","iopub.execute_input":"2024-12-02T04:19:04.905091Z","iopub.status.idle":"2024-12-02T04:19:05.175587Z","shell.execute_reply.started":"2024-12-02T04:19:04.905022Z","shell.execute_reply":"2024-12-02T04:19:05.174256Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"df['clutch_success_percentage'].describe()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-02T04:19:05.177659Z","iopub.execute_input":"2024-12-02T04:19:05.178231Z","iopub.status.idle":"2024-12-02T04:19:05.192058Z","shell.execute_reply.started":"2024-12-02T04:19:05.178181Z","shell.execute_reply":"2024-12-02T04:19:05.190815Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"Out KNN Imputer filled the missing values with 0.156843, which is close to the median value. This makes sense as in a skewed distribution, median is better prefered to fill the missing values compared to mean.","metadata":{}},{"cell_type":"code","source":"df[df['clutch_success_percentage'] == 1]","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-02T04:19:05.193669Z","iopub.execute_input":"2024-12-02T04:19:05.194368Z","iopub.status.idle":"2024-12-02T04:19:05.221214Z","shell.execute_reply.started":"2024-12-02T04:19:05.194315Z","shell.execute_reply":"2024-12-02T04:19:05.219801Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"WOW!!! 😲😳 Player name \"novacaine\" has perfect successful clutch percent. Meaning he/she has clutched the game for a win everytime. ","metadata":{}},{"cell_type":"markdown","source":"## Top 10% players","metadata":{}},{"cell_type":"markdown","source":"Now, lets find the top 10% players based on ratings col:","metadata":{}},{"cell_type":"code","source":"rating_threshold = df['rating'].quantile(0.90)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-02T04:19:05.223271Z","iopub.execute_input":"2024-12-02T04:19:05.223737Z","iopub.status.idle":"2024-12-02T04:19:05.231294Z","shell.execute_reply.started":"2024-12-02T04:19:05.223668Z","shell.execute_reply":"2024-12-02T04:19:05.230126Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"top_10_rated = df[df['rating'] >= rating_threshold]","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-02T04:19:05.233336Z","iopub.execute_input":"2024-12-02T04:19:05.233766Z","iopub.status.idle":"2024-12-02T04:19:05.249425Z","shell.execute_reply.started":"2024-12-02T04:19:05.233691Z","shell.execute_reply":"2024-12-02T04:19:05.248062Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"len(top_10_rated)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-02T04:19:05.251246Z","iopub.execute_input":"2024-12-02T04:19:05.251674Z","iopub.status.idle":"2024-12-02T04:19:05.267056Z","shell.execute_reply.started":"2024-12-02T04:19:05.251639Z","shell.execute_reply":"2024-12-02T04:19:05.265613Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"There are 214 players in the top 10%.<br><br>Let's narrow it down to top 1% players now.","metadata":{}},{"cell_type":"code","source":"rating_threshold = df['rating'].quantile(0.99)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-02T04:19:05.268623Z","iopub.execute_input":"2024-12-02T04:19:05.269035Z","iopub.status.idle":"2024-12-02T04:19:05.285946Z","shell.execute_reply.started":"2024-12-02T04:19:05.269001Z","shell.execute_reply":"2024-12-02T04:19:05.284333Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"top_1_rated = df[df['rating'] >= rating_threshold]","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-02T04:19:05.288048Z","iopub.execute_input":"2024-12-02T04:19:05.288541Z","iopub.status.idle":"2024-12-02T04:19:05.305183Z","shell.execute_reply.started":"2024-12-02T04:19:05.288491Z","shell.execute_reply":"2024-12-02T04:19:05.303622Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"len(top_1_rated)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-02T04:19:05.30681Z","iopub.execute_input":"2024-12-02T04:19:05.307295Z","iopub.status.idle":"2024-12-02T04:19:05.321944Z","shell.execute_reply.started":"2024-12-02T04:19:05.307237Z","shell.execute_reply":"2024-12-02T04:19:05.320731Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"There are 22 players in the top 1%.","metadata":{}},{"cell_type":"code","source":"top_1_rated","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-02T04:19:05.324267Z","iopub.execute_input":"2024-12-02T04:19:05.324645Z","iopub.status.idle":"2024-12-02T04:19:05.371469Z","shell.execute_reply.started":"2024-12-02T04:19:05.324611Z","shell.execute_reply":"2024-12-02T04:19:05.370113Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"top_1_rated.describe()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-02T04:19:05.373166Z","iopub.execute_input":"2024-12-02T04:19:05.373575Z","iopub.status.idle":"2024-12-02T04:19:05.415649Z","shell.execute_reply.started":"2024-12-02T04:19:05.37354Z","shell.execute_reply":"2024-12-02T04:19:05.414347Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"The above are the stats it takes to be in the top 1% in the VCT Challengers tournment.","metadata":{}},{"cell_type":"code","source":"top_1_rated['region'].value_counts()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-02T04:19:05.417124Z","iopub.execute_input":"2024-12-02T04:19:05.417417Z","iopub.status.idle":"2024-12-02T04:19:05.427495Z","shell.execute_reply.started":"2024-12-02T04:19:05.417386Z","shell.execute_reply":"2024-12-02T04:19:05.426181Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"The top players are from Pacific region in this tournament.","metadata":{}},{"cell_type":"markdown","source":"### Top 1% player agents:","metadata":{}},{"cell_type":"code","source":"top_1_agents_dict = {}\n\nfor agent in agents:\n    top_1_agents_dict[agent] = 0","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-02T04:19:05.429197Z","iopub.execute_input":"2024-12-02T04:19:05.42957Z","iopub.status.idle":"2024-12-02T04:19:05.440812Z","shell.execute_reply.started":"2024-12-02T04:19:05.429538Z","shell.execute_reply":"2024-12-02T04:19:05.439501Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"for agent_list in top_1_rated[\"agent\"]:\n    for agent in agent_list:\n        top_1_agents_dict[agent.lower()] += 1\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-02T04:19:05.442284Z","iopub.execute_input":"2024-12-02T04:19:05.442603Z","iopub.status.idle":"2024-12-02T04:19:05.454618Z","shell.execute_reply.started":"2024-12-02T04:19:05.442574Z","shell.execute_reply":"2024-12-02T04:19:05.453453Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"sorted(top_1_agents_dict.items(), key=lambda item: item[1])","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-02T04:19:05.456141Z","iopub.execute_input":"2024-12-02T04:19:05.456477Z","iopub.status.idle":"2024-12-02T04:19:05.471195Z","shell.execute_reply.started":"2024-12-02T04:19:05.456428Z","shell.execute_reply":"2024-12-02T04:19:05.469936Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"KJ, Sova, Cypher are the most frequent agents used by top 1% players. NOTE that none of these agent is a duelist, Sova is a Initiator, and KJ and Cypher are both Sentinels.","metadata":{}},{"cell_type":"markdown","source":"Plot of agent frequency:","metadata":{}},{"cell_type":"code","source":"plt.barh(list(top_1_agents_dict.keys()), list(top_1_agents_dict.values()))\nplt.subplots_adjust(left=0.25) \nplt.xlabel('Count', fontsize=14) \nplt.ylabel('Agent', fontsize=14) \nplt.title('Agent Usage Count', fontsize=16) \nplt.yticks(fontsize=10) \nplt.xticks(fontsize=12) \n\n# Add grid lines for better visualization \nplt.grid(axis='x', linestyle='--', alpha=0.7)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-02T04:19:05.472609Z","iopub.execute_input":"2024-12-02T04:19:05.472961Z","iopub.status.idle":"2024-12-02T04:19:05.854372Z","shell.execute_reply.started":"2024-12-02T04:19:05.47293Z","shell.execute_reply":"2024-12-02T04:19:05.853234Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"We can see that agents like Pheonix, Vyse, Sage, Deadlock, Harbor and Clove were not used at all in this tournament.","metadata":{}},{"cell_type":"markdown","source":"## Top 3 Players in the tournament, based on rating","metadata":{}},{"cell_type":"code","source":"top_1_rated[top_1_rated[\"rating\"] >= 1.5]","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-02T04:19:05.85612Z","iopub.execute_input":"2024-12-02T04:19:05.856553Z","iopub.status.idle":"2024-12-02T04:19:05.878068Z","shell.execute_reply.started":"2024-12-02T04:19:05.856505Z","shell.execute_reply":"2024-12-02T04:19:05.876612Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"1st: Confident<br>\n2nd: consz<br>\n3rd: Kouf<br>","metadata":{}},{"cell_type":"markdown","source":"All of these players played duelist roles, which is a bit expected as they have the best offensive scores in the player stats.","metadata":{}},{"cell_type":"markdown","source":"Player \"Confident\" from team \"Peeker\" has the highest Average combat score, highest KD ratio, top 25% KDA, highest avg damage per round, highest kills per round, lowest assists per round, highest first kills per round.<br><br>\nThis shows that his/her performance in the challengers tournament was great and very  aggresive as his/her most used agent was raze.","metadata":{}},{"cell_type":"code","source":"","metadata":{"trusted":true},"outputs":[],"execution_count":null}]}